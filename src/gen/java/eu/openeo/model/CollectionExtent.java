/*
 * openEO API
 * The openEO API specification for interoperable cloud-based processing of large Earth observation datasets.   **Make sure to take account of several global API specifications**, which are not (fully) covered in this specification:  * [Cross-Origin Resource Sharing (CORS) support](https://open-eo.github.io/openeo-api/v/0.4.2/cors/index.html) to allow browser-based access to the API.  * [Error handling](https://open-eo.github.io/openeo-api/v/0.4.2/errors/index.html)  * Unless otherwise stated the API works *case sensitive*.
 *
 * The version of the OpenAPI document: 0.4.2
 * Contact: openeo@list.tuwien.ac.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.openeo.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * The object describes the spatio-temporal extents of the Collection. Both spatial and temporal extents are required to be specified.
 */
@ApiModel(description = "The object describes the spatio-temporal extents of the Collection. Both spatial and temporal extents are required to be specified.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2019-07-22T13:33:50.326+02:00[Europe/Rome]")
public class CollectionExtent  implements Serializable {
  @JsonProperty("spatial")
  private List<BigDecimal> spatial = new ArrayList<BigDecimal>();

  @JsonProperty("temporal")
  private List<Date> temporal = new ArrayList<Date>();

  public CollectionExtent spatial(List<BigDecimal> spatial) {
    this.spatial = spatial;
    return this;
  }

  public CollectionExtent addSpatialItem(BigDecimal spatialItem) {
    this.spatial.add(spatialItem);
    return this;
  }

  /**
   * Potential *spatial extent* covered by the collection. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):  - West (lower left corner, coordinate axis 1) - South (lower left corner, coordinate axis 2) - Base (optional, lower left corner, coordinate axis 3) - East (upper right corner, coordinate axis 1) - North (upper right corner, coordinate axis 2) - Height (optional, upper right corner, coordinate axis 3)  The coordinate reference system of the values is WGS84 longitude/latitude.
   * @return spatial
   **/
  @JsonProperty("spatial")
  @ApiModelProperty(example = "[-180,-90,180,90]", required = true, value = "Potential *spatial extent* covered by the collection. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):  - West (lower left corner, coordinate axis 1) - South (lower left corner, coordinate axis 2) - Base (optional, lower left corner, coordinate axis 3) - East (upper right corner, coordinate axis 1) - North (upper right corner, coordinate axis 2) - Height (optional, upper right corner, coordinate axis 3)  The coordinate reference system of the values is WGS84 longitude/latitude.")
  @NotNull @Valid  @Size(min=4,max=6)
  public List<BigDecimal> getSpatial() {
    return spatial;
  }

  public void setSpatial(List<BigDecimal> spatial) {
    this.spatial = spatial;
  }

  public CollectionExtent temporal(List<Date> temporal) {
    this.temporal = temporal;
    return this;
  }

  public CollectionExtent addTemporalItem(Date temporalItem) {
    this.temporal.add(temporalItem);
    return this;
  }

  /**
   * Potential *temporal extent* covered by the collection. The temporal extent specified by a start and an end time, each formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time. Open date ranges are supported and can be specified by setting one of the times to null. Setting both entries to null is not allowed. Only the Gregorian calendar is supported.
   * @return temporal
   **/
  @JsonProperty("temporal")
  @ApiModelProperty(example = "[\"2016-01-01T00:00:00Z\",null]", required = true, value = "Potential *temporal extent* covered by the collection. The temporal extent specified by a start and an end time, each formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time. Open date ranges are supported and can be specified by setting one of the times to null. Setting both entries to null is not allowed. Only the Gregorian calendar is supported.")
  @NotNull @Valid  @Size(min=2,max=2)
  public List<Date> getTemporal() {
    return temporal;
  }

  public void setTemporal(List<Date> temporal) {
    this.temporal = temporal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollectionExtent collectionExtent = (CollectionExtent) o;
    return Objects.equals(this.spatial, collectionExtent.spatial) &&
        Objects.equals(this.temporal, collectionExtent.temporal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(spatial, temporal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollectionExtent {\n");
    
    sb.append("    spatial: ").append(toIndentedString(spatial)).append("\n");
    sb.append("    temporal: ").append(toIndentedString(temporal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

