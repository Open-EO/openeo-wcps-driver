/*
 * OpenEO API
 * The OpenEO API specification for interoperable cloud-based processing of large Earth observation datasets. **This early draft version is incomplete and intended for working on a prototype and a proof of concept.** Things that are currently missing particularly include:   * Authentication and authorization with OAuth 2.0,   * how results of computations can be downloaded,   * how data is streamed into UDFs and how the output of UDFs is returned,   * how services are organized as microservices,   * how payments can be handled,  * how resources (e.g. process graphs) can be shared,  * and how OpenSearch is interfaced
 *
 * OpenAPI spec version: 0.0.2
 * Contact: marius.appel@uni-muenster.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package eu.openeo.model;

import com.fasterxml.jackson.annotation.JsonCreator;

/**
 * Data type for band values including its bit size.
 */
public enum BandDatatype {

	UINT8("uint8"),

	UINT16("uint16"),

	UINT32("uint32"),

	UINT64("uint64"),

	INT8("int8"),

	INT16("int16"),

	INT32("int32"),

	INT64("int64"),

	FLOAT16("float16"),

	FLOAT32("float32"),

	FLOAT64("float64");

	private String value;

	BandDatatype(String value) {
		this.value = value;
	}

	@Override
	public String toString() {
		return String.valueOf(value);
	}

	@JsonCreator
	public static BandDatatype fromValue(String text) {
		for (BandDatatype b : BandDatatype.values()) {
			if (String.valueOf(b.value).equals(text)) {
				return b;
			}
		}
		return null;
	}
}
