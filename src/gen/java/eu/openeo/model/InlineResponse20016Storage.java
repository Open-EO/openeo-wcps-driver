/*
 * openEO API
 * The openEO API specification for interoperable cloud-based processing of large Earth observation datasets.   **Make sure to take account of several global API specifications**, which are not (fully) covered in this specification:  * [Cross-Origin Resource Sharing (CORS) support](https://open-eo.github.io/openeo-api/v/0.4.0/cors/index.html) to allow browser-based access to the API.  * [Error handling](https://open-eo.github.io/openeo-api/v/0.4.0/errors/index.html)  * Unless otherwise stated the API works *case sensitive*.
 *
 * OpenAPI spec version: 0.4.0
 * Contact: openeo@list.tuwien.ac.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.openeo.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Information about the storage space available to the user.
 */
@ApiModel(description = "Information about the storage space available to the user.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2019-02-12T13:52:55.621+01:00[Europe/Rome]")
public class InlineResponse20016Storage  implements Serializable {
  @JsonProperty("free")
  private Integer free;

  @JsonProperty("quota")
  private Integer quota;

  public InlineResponse20016Storage free(Integer free) {
    this.free = free;
    return this;
  }

  /**
   * Free storage space in bytes, which is still availble to the user. Effectively, this is the disk quota minus the used space by the user, e.g. user-uploaded files and job results.
   * @return free
   **/
  @JsonProperty("free")
  @ApiModelProperty(example = "536870912", required = true, value = "Free storage space in bytes, which is still availble to the user. Effectively, this is the disk quota minus the used space by the user, e.g. user-uploaded files and job results.")
    @NotNull

  public Integer getFree() {
    return free;
  }

  public void setFree(Integer free) {
    this.free = free;
  }

  public InlineResponse20016Storage quota(Integer quota) {
    this.quota = quota;
    return this;
  }

  /**
   * Maximum storage space (disk quota) in bytes available to the user.
   * @return quota
   **/
  @JsonProperty("quota")
  @ApiModelProperty(example = "1073741824", required = true, value = "Maximum storage space (disk quota) in bytes available to the user.")
    @NotNull

  public Integer getQuota() {
    return quota;
  }

  public void setQuota(Integer quota) {
    this.quota = quota;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20016Storage inlineResponse20016Storage = (InlineResponse20016Storage) o;
    return Objects.equals(this.free, inlineResponse20016Storage.free) &&
        Objects.equals(this.quota, inlineResponse20016Storage.quota);
  }

  @Override
  public int hashCode() {
    return Objects.hash(free, quota);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20016Storage {\n");
    
    sb.append("    free: ").append(toIndentedString(free)).append("\n");
    sb.append("    quota: ").append(toIndentedString(quota)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

