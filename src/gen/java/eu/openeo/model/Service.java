/*
 * OpenEO API
 * The OpenEO API specification for interoperable cloud-based processing of large Earth observation datasets. **This early draft version is incomplete and intended for working on a prototype and a proof of concept.** Things that are currently missing particularly include:   * Authentication and authorization with OAuth 2.0,   * how results of computations can be downloaded,   * how data is streamed into UDFs and how the output of UDFs is returned,   * how services are organized as microservices,   * how payments can be handled,  * how resources (e.g. process graphs) can be shared,  * and how OpenSearch is interfaced
 *
 * OpenAPI spec version: 0.0.2
 * Contact: marius.appel@uni-muenster.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package eu.openeo.model;

import java.io.Serializable;
import java.util.Objects;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Defines metadata of running services to access result data.
 */
@ApiModel(description = "Defines metadata of running services to access result data.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-02-26T14:26:50.688+01:00")
public class Service implements Serializable {
	@JsonProperty("service_id")
	private String serviceId = null;

	@JsonProperty("service_url")
	private String serviceUrl = null;

	@JsonProperty("service_type")
	private String serviceType = null;

	@JsonProperty("service_args")
	private ServiceArgs serviceArgs = null;

	@JsonProperty("job_id")
	private String jobId = null;

	public Service serviceId(String serviceId) {
		this.serviceId = serviceId;
		return this;
	}

	/**
	 * Unique identifier of a service that is generated by the back-end during
	 * service creation.
	 * 
	 * @return serviceId
	 **/
	@JsonProperty("service_id")
	@ApiModelProperty(example = "91f3caa3b5281a", required = true, value = "Unique identifier of a service that is generated by the back-end during service creation.")
	@NotNull
	public String getServiceId() {
		return serviceId;
	}

	public void setServiceId(String serviceId) {
		this.serviceId = serviceId;
	}

	public Service serviceUrl(String serviceUrl) {
		this.serviceUrl = serviceUrl;
		return this;
	}

	/**
	 * URL at which the service is accessible. Doesn&#39;t necessarily need to
	 * contain the API base url.
	 * 
	 * @return serviceUrl
	 **/
	@JsonProperty("service_url")
	@ApiModelProperty(example = "https://openeo.org/wms/91f3caa3b5281a", required = true, value = "URL at which the service is accessible. Doesn't necessarily need to contain the API base url.")
	@NotNull
	public String getServiceUrl() {
		return serviceUrl;
	}

	public void setServiceUrl(String serviceUrl) {
		this.serviceUrl = serviceUrl;
	}

	public Service serviceType(String serviceType) {
		this.serviceType = serviceType;
		return this;
	}

	/**
	 * Get serviceType
	 * 
	 * @return serviceType
	 **/
	@JsonProperty("service_type")
	@ApiModelProperty(required = true, value = "")
	@NotNull
	public String getServiceType() {
		return serviceType;
	}

	public void setServiceType(String serviceType) {
		this.serviceType = serviceType;
	}

	public Service serviceArgs(ServiceArgs serviceArgs) {
		this.serviceArgs = serviceArgs;
		return this;
	}

	/**
	 * Get serviceArgs
	 * 
	 * @return serviceArgs
	 **/
	@JsonProperty("service_args")
	@ApiModelProperty(value = "")
	public ServiceArgs getServiceArgs() {
		return serviceArgs;
	}

	public void setServiceArgs(ServiceArgs serviceArgs) {
		this.serviceArgs = serviceArgs;
	}

	public Service jobId(String jobId) {
		this.jobId = jobId;
		return this;
	}

	/**
	 * The job identifier string refering to the job this service is running for.
	 * 
	 * @return jobId
	 **/
	@JsonProperty("job_id")
	@ApiModelProperty(example = "42d5k3nd92mk49dmj294md", required = true, value = "The job identifier string refering to the job this service is running for.")
	@NotNull
	public String getJobId() {
		return jobId;
	}

	public void setJobId(String jobId) {
		this.jobId = jobId;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		Service service = (Service) o;
		return Objects.equals(this.serviceId, service.serviceId) && Objects.equals(this.serviceUrl, service.serviceUrl)
				&& Objects.equals(this.serviceType, service.serviceType)
				&& Objects.equals(this.serviceArgs, service.serviceArgs) && Objects.equals(this.jobId, service.jobId);
	}

	@Override
	public int hashCode() {
		return Objects.hash(serviceId, serviceUrl, serviceType, serviceArgs, jobId);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class Service {\n");

		sb.append("    serviceId: ").append(toIndentedString(serviceId)).append("\n");
		sb.append("    serviceUrl: ").append(toIndentedString(serviceUrl)).append("\n");
		sb.append("    serviceType: ").append(toIndentedString(serviceType)).append("\n");
		sb.append("    serviceArgs: ").append(toIndentedString(serviceArgs)).append("\n");
		sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
