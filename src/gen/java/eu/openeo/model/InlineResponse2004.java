/*
 * OpenEO API
 * The OpenEO API specification for interoperable cloud-based processing of large Earth observation datasets. **This early draft version is incomplete and intended for working on a prototype and a proof of concept.** Things that are currently missing particularly include:   * Authentication and authorization with OAuth 2.0,   * how results of computations can be downloaded,   * how data is streamed into UDFs and how the output of UDFs is returned,   * how services are organized as microservices,   * how payments can be handled,  * how resources (e.g. process graphs) can be shared,  * and how OpenSearch is interfaced
 *
 * OpenAPI spec version: 0.0.2
 * Contact: marius.appel@uni-muenster.de
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package eu.openeo.model;

import java.io.Serializable;
import java.util.Objects;

import javax.validation.constraints.NotNull;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * InlineResponse2004
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-02-26T14:26:50.688+01:00")
public class InlineResponse2004 implements Serializable {
	@JsonProperty("name")
	private String name = null;

	@JsonProperty("size")
	private Integer size = null;

	@JsonProperty("modified")
	private String modified = null;

	public InlineResponse2004 name(String name) {
		this.name = name;
		return this;
	}

	/**
	 * Path to the file
	 * 
	 * @return name
	 **/
	@JsonProperty("name")
	@ApiModelProperty(required = true, value = "Path to the file")
	@NotNull
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public InlineResponse2004 size(Integer size) {
		this.size = size;
		return this;
	}

	/**
	 * File size in bytes
	 * 
	 * @return size
	 **/
	@JsonProperty("size")
	@ApiModelProperty(value = "File size in bytes")
	public Integer getSize() {
		return size;
	}

	public void setSize(Integer size) {
		this.size = size;
	}

	public InlineResponse2004 modified(String modified) {
		this.modified = modified;
		return this;
	}

	/**
	 * Date and time the file has been modified at last in ISO8601 format
	 * 
	 * @return modified
	 **/
	@JsonProperty("modified")
	@ApiModelProperty(value = "Date and time the file has been modified at last in ISO8601 format")
	public String getModified() {
		return modified;
	}

	public void setModified(String modified) {
		this.modified = modified;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		InlineResponse2004 inlineResponse2004 = (InlineResponse2004) o;
		return Objects.equals(this.name, inlineResponse2004.name) && Objects.equals(this.size, inlineResponse2004.size)
				&& Objects.equals(this.modified, inlineResponse2004.modified);
	}

	@Override
	public int hashCode() {
		return Objects.hash(name, size, modified);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class InlineResponse2004 {\n");

		sb.append("    name: ").append(toIndentedString(name)).append("\n");
		sb.append("    size: ").append(toIndentedString(size)).append("\n");
		sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}
}
