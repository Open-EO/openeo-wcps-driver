/*
 * openEO API
 * The openEO API specification for interoperable cloud-based processing of large Earth observation datasets.   **Make sure to take account of several global API specifications**, which are not (fully) covered in this specification:  * [Cross-Origin Resource Sharing (CORS) support](https://open-eo.github.io/openeo-api/v/0.4.2/cors/index.html) to allow browser-based access to the API.  * [Error handling](https://open-eo.github.io/openeo-api/v/0.4.2/errors/index.html)  * Unless otherwise stated the API works *case sensitive*.
 *
 * The version of the OpenAPI document: 0.4.2
 * Contact: openeo@list.tuwien.ac.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.openeo.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.Date;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * BatchJobEstimateResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2019-07-22T13:33:50.326+02:00[Europe/Rome]")
public class BatchJobEstimateResponse  implements Serializable {
  @JsonProperty("costs")
  private BigDecimal costs;

  @JsonProperty("duration")
  private String duration;

  @JsonProperty("size")
  private Integer size;

  @JsonProperty("downloads_included")
  private Integer downloadsIncluded;

  @JsonProperty("expires")
  private Date expires;

  public BatchJobEstimateResponse costs(BigDecimal costs) {
    this.costs = costs;
    return this;
  }

  /**
   * An amount of money or credits. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling &#x60;GET /&#x60;.
   * @return costs
   **/
  @JsonProperty("costs")
  @ApiModelProperty(example = "12.98", value = "An amount of money or credits. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`.")
  @Valid 
  public BigDecimal getCosts() {
    return costs;
  }

  public void setCosts(BigDecimal costs) {
    this.costs = costs;
  }

  public BatchJobEstimateResponse duration(String duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Estimated duration for the operation. Duration MUST be specified as a ISO 8601 duration.
   * @return duration
   **/
  @JsonProperty("duration")
  @ApiModelProperty(example = "P1Y2M10DT2H30M", value = "Estimated duration for the operation. Duration MUST be specified as a ISO 8601 duration.")
  
  public String getDuration() {
    return duration;
  }

  public void setDuration(String duration) {
    this.duration = duration;
  }

  public BatchJobEstimateResponse size(Integer size) {
    this.size = size;
    return this;
  }

  /**
   * Estimated required storage capacity, i.e. the size of the generated files. Size MUST be specified in bytes.
   * @return size
   **/
  @JsonProperty("size")
  @ApiModelProperty(example = "157286400", value = "Estimated required storage capacity, i.e. the size of the generated files. Size MUST be specified in bytes.")
  
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public BatchJobEstimateResponse downloadsIncluded(Integer downloadsIncluded) {
    this.downloadsIncluded = downloadsIncluded;
    return this;
  }

  /**
   * Specifies how many full downloads of the processed data are included in the estimate. Set to &#x60;null&#x60; for unlimited downloads, which is also the default value.
   * @return downloadsIncluded
   **/
  @JsonProperty("downloads_included")
  @ApiModelProperty(example = "5", value = "Specifies how many full downloads of the processed data are included in the estimate. Set to `null` for unlimited downloads, which is also the default value.")
  
  public Integer getDownloadsIncluded() {
    return downloadsIncluded;
  }

  public void setDownloadsIncluded(Integer downloadsIncluded) {
    this.downloadsIncluded = downloadsIncluded;
  }

  public BatchJobEstimateResponse expires(Date expires) {
    this.expires = expires;
    return this;
  }

  /**
   * Time until which the estimate is valid, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.
   * @return expires
   **/
  @JsonProperty("expires")
  @ApiModelProperty(value = "Time until which the estimate is valid, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.")
  
  public Date getExpires() {
    return expires;
  }

  public void setExpires(Date expires) {
    this.expires = expires;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BatchJobEstimateResponse batchJobEstimateResponse = (BatchJobEstimateResponse) o;
    return Objects.equals(this.costs, batchJobEstimateResponse.costs) &&
        Objects.equals(this.duration, batchJobEstimateResponse.duration) &&
        Objects.equals(this.size, batchJobEstimateResponse.size) &&
        Objects.equals(this.downloadsIncluded, batchJobEstimateResponse.downloadsIncluded) &&
        Objects.equals(this.expires, batchJobEstimateResponse.expires);
  }

  @Override
  public int hashCode() {
    return Objects.hash(costs, duration, size, downloadsIncluded, expires);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BatchJobEstimateResponse {\n");
    
    sb.append("    costs: ").append(toIndentedString(costs)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    downloadsIncluded: ").append(toIndentedString(downloadsIncluded)).append("\n");
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

