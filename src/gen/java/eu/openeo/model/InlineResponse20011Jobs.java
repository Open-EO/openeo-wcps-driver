/*
 * openEO API
 * The openEO API specification for interoperable cloud-based processing of large Earth observation datasets.   **Make sure to take account of several global API specifications**, which are not (fully) covered in this specification:  * [Cross-Origin Resource Sharing (CORS) support](https://open-eo.github.io/openeo-api/v/0.4.0/cors/index.html) to allow browser-based access to the API.  * [Error handling](https://open-eo.github.io/openeo-api/v/0.4.0/errors/index.html)  * Unless otherwise stated the API works *case sensitive*.
 *
 * OpenAPI spec version: 0.4.0
 * Contact: openeo@list.tuwien.ac.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.openeo.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import eu.openeo.model.Status;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import java.util.Date;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Defines a metadata subset of betch jobs that have been submitted by users. To get the full metadata for a job including a process graph call &#x60;GET /jobs/{job_id}&#x60;
 */
@ApiModel(description = "Defines a metadata subset of betch jobs that have been submitted by users. To get the full metadata for a job including a process graph call `GET /jobs/{job_id}`")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2019-02-12T13:52:55.621+01:00[Europe/Rome]")
public class InlineResponse20011Jobs  implements Serializable {
  @JsonProperty("id")
  private String id;

  @JsonProperty("title")
  private String title;

  @JsonProperty("description")
  private String description;

  @JsonProperty("status")
  private Status status = null;

  @JsonProperty("submitted")
  private Date submitted;

  @JsonProperty("updated")
  private Date updated;

  @JsonProperty("plan")
  private String plan;

  @JsonProperty("costs")
  private BigDecimal costs;

  @JsonProperty("budget")
  private BigDecimal budget;

  public InlineResponse20011Jobs id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier of a job that is generated by the back-end during job submission. MUST match the specified pattern.
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(example = "a3cca2b2aa1e3b5b", required = true, value = "Unique identifier of a job that is generated by the back-end during job submission. MUST match the specified pattern.")
    @NotNull
 @Pattern(regexp="^[A-Za-z0-9_\\-\\.~]+$")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse20011Jobs title(String title) {
    this.title = title;
    return this;
  }

  /**
   * A short description to easily distinguish entities.
   * @return title
   **/
  @JsonProperty("title")
  @ApiModelProperty(example = "NDVI based on Sentinel 2", value = "A short description to easily distinguish entities.")
  
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public InlineResponse20011Jobs description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Detailed description to fully explain the entity.  [CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation.
   * @return description
   **/
  @JsonProperty("description")
  @ApiModelProperty(example = "Deriving minimum NDVI measurements over pixel time series of Sentinel 2", value = "Detailed description to fully explain the entity.  [CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation.")
  
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InlineResponse20011Jobs status(Status status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   **/
  @JsonProperty("status")
  @ApiModelProperty(required = true, value = "")
    @NotNull
@Valid
  public Status getStatus() {
    return status;
  }

  public void setStatus(Status status) {
    this.status = status;
  }

  public InlineResponse20011Jobs submitted(Date submitted) {
    this.submitted = submitted;
    return this;
  }

  /**
   * Date and time of creation, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.
   * @return submitted
   **/
  @JsonProperty("submitted")
  @ApiModelProperty(required = true, value = "Date and time of creation, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.")
    @NotNull

  public Date getSubmitted() {
    return submitted;
  }

  public void setSubmitted(Date submitted) {
    this.submitted = submitted;
  }

  public InlineResponse20011Jobs updated(Date updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Date and time of last status change, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.
   * @return updated
   **/
  @JsonProperty("updated")
  @ApiModelProperty(value = "Date and time of last status change, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.")
  
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public InlineResponse20011Jobs plan(String plan) {
    this.plan = plan;
    return this;
  }

  /**
   * The billing plan to process and charge the job with. The plans can be retrieved by calling &#x60;GET /&#x60;. Billing plans MUST be accepted *case insensitive*.
   * @return plan
   **/
  @JsonProperty("plan")
  @ApiModelProperty(example = "free", value = "The billing plan to process and charge the job with. The plans can be retrieved by calling `GET /`. Billing plans MUST be accepted *case insensitive*.")
  
  public String getPlan() {
    return plan;
  }

  public void setPlan(String plan) {
    this.plan = plan;
  }

  public InlineResponse20011Jobs costs(BigDecimal costs) {
    this.costs = costs;
    return this;
  }

  /**
   * An amount of money or credits. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling &#x60;GET /&#x60;.
   * @return costs
   **/
  @JsonProperty("costs")
  @ApiModelProperty(example = "12.98", value = "An amount of money or credits. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`.")
  @Valid
  public BigDecimal getCosts() {
    return costs;
  }

  public void setCosts(BigDecimal costs) {
    this.costs = costs;
  }

  public InlineResponse20011Jobs budget(BigDecimal budget) {
    this.budget = budget;
    return this;
  }

  /**
   * Maximum amount of costs the user is allowed to produce. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling &#x60;GET /&#x60;. If possible, back-ends SHOULD reject jobs with openEO error &#x60;PaymentRequired&#x60; if the budget is too low to process the request completely. Otherwise, when reaching the budget jobs MAY try to return partial results if possible. Otherwise the request and results are discarded. Users SHOULD be warned by clients that reaching the budget MAY discard the results and that setting this value should be well-wrought. Setting the buget to &#x60;null&#x60; means there is no specified budget.
   * @return budget
   **/
  @JsonProperty("budget")
  @ApiModelProperty(example = "100", value = "Maximum amount of costs the user is allowed to produce. The value MUST be specified in the currency the back-end is working with. The currency can be retrieved by calling `GET /`. If possible, back-ends SHOULD reject jobs with openEO error `PaymentRequired` if the budget is too low to process the request completely. Otherwise, when reaching the budget jobs MAY try to return partial results if possible. Otherwise the request and results are discarded. Users SHOULD be warned by clients that reaching the budget MAY discard the results and that setting this value should be well-wrought. Setting the buget to `null` means there is no specified budget.")
  @Valid
  public BigDecimal getBudget() {
    return budget;
  }

  public void setBudget(BigDecimal budget) {
    this.budget = budget;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20011Jobs inlineResponse20011Jobs = (InlineResponse20011Jobs) o;
    return Objects.equals(this.id, inlineResponse20011Jobs.id) &&
        Objects.equals(this.title, inlineResponse20011Jobs.title) &&
        Objects.equals(this.description, inlineResponse20011Jobs.description) &&
        Objects.equals(this.status, inlineResponse20011Jobs.status) &&
        Objects.equals(this.submitted, inlineResponse20011Jobs.submitted) &&
        Objects.equals(this.updated, inlineResponse20011Jobs.updated) &&
        Objects.equals(this.plan, inlineResponse20011Jobs.plan) &&
        Objects.equals(this.costs, inlineResponse20011Jobs.costs) &&
        Objects.equals(this.budget, inlineResponse20011Jobs.budget);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, description, status, submitted, updated, plan, costs, budget);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20011Jobs {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    submitted: ").append(toIndentedString(submitted)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    plan: ").append(toIndentedString(plan)).append("\n");
    sb.append("    costs: ").append(toIndentedString(costs)).append("\n");
    sb.append("    budget: ").append(toIndentedString(budget)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

