/*
 * openEO API
 * The openEO API specification for interoperable cloud-based processing of large Earth observation datasets.   **Make sure to take account of several global API specifications**, which are not (fully) covered in this specification:  * [Cross-Origin Resource Sharing (CORS) support](https://open-eo.github.io/openeo-api/v/0.4.0/cors/index.html) to allow browser-based access to the API.  * [Error handling](https://open-eo.github.io/openeo-api/v/0.4.0/errors/index.html)  * Unless otherwise stated the API works *case sensitive*.
 *
 * OpenAPI spec version: 0.4.0
 * Contact: openeo@list.tuwien.ac.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.openeo.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import eu.openeo.model.Link;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * InlineResponse20014
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2019-02-12T13:52:55.621+01:00[Europe/Rome]")
public class InlineResponse20014  implements Serializable {
  @JsonProperty("id")
  private String id;

  @JsonProperty("title")
  private String title;

  @JsonProperty("description")
  private String description;

  @JsonProperty("updated")
  private Date updated;

  @JsonProperty("links")
  private List<Link> links = new ArrayList<Link>();

  public InlineResponse20014 id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier of a job that is generated by the back-end during job submission. MUST match the specified pattern.
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(example = "a3cca2b2aa1e3b5b", value = "Unique identifier of a job that is generated by the back-end during job submission. MUST match the specified pattern.")
   @Pattern(regexp="^[A-Za-z0-9_\\-\\.~]+$")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public InlineResponse20014 title(String title) {
    this.title = title;
    return this;
  }

  /**
   * A short description to easily distinguish entities.
   * @return title
   **/
  @JsonProperty("title")
  @ApiModelProperty(example = "NDVI based on Sentinel 2", value = "A short description to easily distinguish entities.")
  
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public InlineResponse20014 description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Detailed description to fully explain the entity.  [CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation.
   * @return description
   **/
  @JsonProperty("description")
  @ApiModelProperty(example = "Deriving minimum NDVI measurements over pixel time series of Sentinel 2", value = "Detailed description to fully explain the entity.  [CommonMark 0.28](http://commonmark.org/) syntax MAY be used for rich text representation.")
  
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public InlineResponse20014 updated(Date updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Date and time of last status change, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.
   * @return updated
   **/
  @JsonProperty("updated")
  @ApiModelProperty(value = "Date and time of last status change, formatted as a [RFC 3339](https://www.ietf.org/rfc/rfc3339) date-time.")
  
  public Date getUpdated() {
    return updated;
  }

  public void setUpdated(Date updated) {
    this.updated = updated;
  }

  public InlineResponse20014 links(List<Link> links) {
    this.links = links;
    return this;
  }

  public InlineResponse20014 addLinksItem(Link linksItem) {
    this.links.add(linksItem);
    return this;
  }

  /**
   * Get links
   * @return links
   **/
  @JsonProperty("links")
  @ApiModelProperty(example = "[{\"href\":\"https://openeo.org/api/v0.4/download/583fba8b2ce/1.tif\",\"type\":\"image/tiff\"},{\"href\":\"https://openeo.org/api/v0.4/download/583fba8b2ce/2.tif\",\"type\":\"image/tiff\"}]", required = true, value = "")
    @NotNull
@Valid
  public List<Link> getLinks() {
    return links;
  }

  public void setLinks(List<Link> links) {
    this.links = links;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse20014 inlineResponse20014 = (InlineResponse20014) o;
    return Objects.equals(this.id, inlineResponse20014.id) &&
        Objects.equals(this.title, inlineResponse20014.title) &&
        Objects.equals(this.description, inlineResponse20014.description) &&
        Objects.equals(this.updated, inlineResponse20014.updated) &&
        Objects.equals(this.links, inlineResponse20014.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, description, updated, links);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse20014 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

