/*
 * openEO API
 * The openEO API specification for interoperable cloud-based processing of large Earth observation datasets.   **Make sure to take account of several global API specifications**, which are not (fully) covered in this specification:  * [Cross-Origin Resource Sharing (CORS) support](https://open-eo.github.io/openeo-api/v/0.4.2/cors/index.html) to allow browser-based access to the API.  * [Error handling](https://open-eo.github.io/openeo-api/v/0.4.2/errors/index.html)  * Unless otherwise stated the API works *case sensitive*.
 *
 * The version of the OpenAPI document: 0.4.2
 * Contact: openeo@list.tuwien.ac.at
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.openeo.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import eu.openeo.model.CollectionSciScipublications;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * CollectionSci
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaJerseyServerCodegen", date = "2019-07-22T13:33:50.326+02:00[Europe/Rome]")
public class CollectionSci  implements Serializable {
  @JsonProperty("sci:doi")
  private String sciColonDoi;

  @JsonProperty("sci:citation")
  private String sciColonCitation;

  @JsonProperty("sci:publications")
  private List<CollectionSciScipublications> sciColonPublications = null;

  public CollectionSci sciColonDoi(String sciColonDoi) {
    this.sciColonDoi = sciColonDoi;
    return this;
  }

  /**
   * The DOI name of the collection, e.g. &#x60;10.1000/xyz123&#x60;. This MUST NOT be a DOIs link. For all DOI names respective DOI links SHOULD be added to the links section of the collection with relation type &#x60;cite-as&#x60;.
   * @return sciColonDoi
   **/
  @JsonProperty("sci:doi")
  @ApiModelProperty(value = "The DOI name of the collection, e.g. `10.1000/xyz123`. This MUST NOT be a DOIs link. For all DOI names respective DOI links SHOULD be added to the links section of the collection with relation type `cite-as`.")
   @Pattern(regexp="^(10[.][0-9]{4,}(?:[.][0-9]+)*_/(?:(?![%\"#? ])\\S)+)$")
  public String getSciColonDoi() {
    return sciColonDoi;
  }

  public void setSciColonDoi(String sciColonDoi) {
    this.sciColonDoi = sciColonDoi;
  }

  public CollectionSci sciColonCitation(String sciColonCitation) {
    this.sciColonCitation = sciColonCitation;
    return this;
  }

  /**
   * The recommended human-readable reference (citation) to be used by publications citing this collection. No specific citation style is suggested, but the citation should contain all information required to find the publication distinctively.
   * @return sciColonCitation
   **/
  @JsonProperty("sci:citation")
  @ApiModelProperty(value = "The recommended human-readable reference (citation) to be used by publications citing this collection. No specific citation style is suggested, but the citation should contain all information required to find the publication distinctively.")
  
  public String getSciColonCitation() {
    return sciColonCitation;
  }

  public void setSciColonCitation(String sciColonCitation) {
    this.sciColonCitation = sciColonCitation;
  }

  public CollectionSci sciColonPublications(List<CollectionSciScipublications> sciColonPublications) {
    this.sciColonPublications = sciColonPublications;
    return this;
  }

  public CollectionSci addSciColonPublicationsItem(CollectionSciScipublications sciColonPublicationsItem) {
    if (this.sciColonPublications == null) {
      this.sciColonPublications = new ArrayList<CollectionSciScipublications>();
    }
    this.sciColonPublications.add(sciColonPublicationsItem);
    return this;
  }

  /**
   * A list of publications which describe and reference the collection.
   * @return sciColonPublications
   **/
  @JsonProperty("sci:publications")
  @ApiModelProperty(value = "A list of publications which describe and reference the collection.")
  @Valid 
  public List<CollectionSciScipublications> getSciColonPublications() {
    return sciColonPublications;
  }

  public void setSciColonPublications(List<CollectionSciScipublications> sciColonPublications) {
    this.sciColonPublications = sciColonPublications;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CollectionSci collectionSci = (CollectionSci) o;
    return Objects.equals(this.sciColonDoi, collectionSci.sciColonDoi) &&
        Objects.equals(this.sciColonCitation, collectionSci.sciColonCitation) &&
        Objects.equals(this.sciColonPublications, collectionSci.sciColonPublications);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sciColonDoi, sciColonCitation, sciColonPublications);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CollectionSci {\n");
    
    sb.append("    sciColonDoi: ").append(toIndentedString(sciColonDoi)).append("\n");
    sb.append("    sciColonCitation: ").append(toIndentedString(sciColonCitation)).append("\n");
    sb.append("    sciColonPublications: ").append(toIndentedString(sciColonPublications)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

